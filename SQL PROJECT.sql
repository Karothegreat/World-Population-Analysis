-- CREATE A DATABASE 'PORTFOLIO PROJECT'
-- LOAD THE DATA INTO THE DATABASE

CREATE DATABASE PORTFOLIO_PROJECT;
-- WRITE A QUERY TO RETRIEVE ALL RECORDS 
SELECT * FROM DIRTYDATA;

-- CREATE A COPY OF THE DATA (STAGING DATA)
CREATE TABLE STAGING_DATA LIKE DIRTYDATA;

SELECT * FROM STAGING_DATA;

-- INSERT VALUES INTO STAGING_DATA
INSERT INTO STAGING_DATA
SELECT * FROM DIRTYDATA;

SELECT * FROM STAGING_DATA;

-- DATA CLEANING
-- SEPARATE THE EMP_ID INTO TWO
SELECT `EMP ID`, LEFT(`EMP ID`,2) AS `CODE`, RIGHT(`EMP ID`,5) AS ID 
FROM STAGING_DATA;

ALTER TABLE STAGING_DATA
ADD COLUMN (`CODE` TEXT ,ID INT);

UPDATE STAGING_DATA
SET `CODE` = LEFT(`EMP ID`,2);

UPDATE STAGING_DATA
SET ID = RIGHT(`EMP ID`,5);

SELECT * FROM STAGING_DATA;

-- DELETE THE EMPLOYEE ID COLUMN
ALTER TABLE STAGING_DATA
DROP COLUMN `EMP ID`;

SELECT `NAME`, TRIM(`NAME`) AS NEW_NAME 
FROM STAGING_DATA;

UPDATE STAGING_DATA
SET `NAME` = TRIM(`NAME`);

SELECT * FROM STAGING_DATA;

-- WRITE A QUERY TO RETURN ALL THE DISTINCT GENDER IN THE TABLE 
SELECT DISTINCT GENDER FROM STAGING_DATA ;

-- CHECK THE COUNT OF THE DISTINCT GENDER
SELECT COUNT(GENDER) FROM STAGING_DATA;

SELECT GENDER, COUNT(GENDER) FROM STAGING_DATA
GROUP BY GENDER;

UPDATE STAGING_DATA
SET GENDER = 'UNKNOWN'
WHERE GENDER = '';

SELECT * FROM STAGING_DATA;

UPDATE STAGING_DATA
SET DEPARTMENT = 'UNKNOWN'
WHERE DEPARTMENT IS NULL;

SELECT REPLACE(SALARY,'$','') 
FROM STAGING_DATA;

UPDATE STAGING_DATA
SET SALARY = REPLACE(SALARY,'$','');

SELECT * FROM STAGING_DATA;

SELECT `START DATE` 
FROM STAGING_DATA;

SELECT 
    `START DATE`, STR_TO_DATE(`START DATE`, '%m/%d/%Y')
FROM
    STAGING_DATA;

-- FETCH THE RECORDS OF EMPLOYEE IN THE SERVICES DEPARTMENT
SELECT * FROM STAGING_DATA
WHERE DEPARTMENT = 'services';

-- FETCH DATA OF THOSE THAT ARE PERMANENT EMPLOYEEE
SELECT * FROM STAGING_DATA
WHERE `EMPLOYEE TYPE` = 'PERMANENT';

-- FETCH THE RECORDS OF THOSE IN THE MARKETING DEPT & SALARY > 100,000
SELECT * FROM STAGING_DATA
WHERE DEPARTMENT = 'MARKETING' AND SALARY > 100000;

-- HOW TO CHECK FOR DUPLICATE
SELECT `NAME`, COUNT(`NAME`) AS DUPLICATES 
FROM STAGING_DATA
GROUP BY `NAME`; 

-- FILTERING THE DUPLICATES 
SELECT `NAME`, COUNT(`NAME`) AS DUPLICATES 
FROM STAGING_DATA
GROUP BY `NAME`
HAVING COUNT(`NAME`) > 1; 

-- CONFIRMING DUPLICATES
SELECT * FROM STAGING_DATA
WHERE `NAME` = 'Danica Nayshe';

-- REMOVING THE DUPLICATES
CREATE TEMPORARY TABLE T1 
WITH DUPLICATES AS
(SELECT `NAME`, GENDER, DEPARTMENT, SALARY, COUNT(*) AS DUPLICATED
FROM STAGING_DATA
GROUP BY `NAME`, GENDER, DEPARTMENT, SALARY)
SELECT * FROM DUPLICATES WHERE DUPLICATED > 1;

WITH DUPLICATES AS
(SELECT `NAME`, GENDER, DEPARTMENT, SALARY, COUNT(*) AS DUPLICATED
FROM STAGING_DATA
GROUP BY `NAME`, GENDER, DEPARTMENT, SALARY)
DELETE FROM DUPLICATES WHERE DUPLICATED > 1;

-- FETCHING ALL RECORDS FROM THE DATA
SELECT * FROM STAGING_DATA;

-- CHECKING FOR DUPLICATES
CREATE TEMPORARY TABLE
SELECT `NAME`, GENDER, DEPARTMENT, SALARY, `START DATE`, FTE, 
`EMPLOYEE TYPE`,`WORK LOCATION`, `CODE`,`ID`, COUNT(*) AS DUPLICATED
FROM STAGING_DATA
GROUP BY `NAME`, GENDER, DEPARTMENT, SALARY, `START DATE`, FTE, 
`EMPLOYEE TYPE`,`WORK LOCATION`, `CODE`,`ID`;

SELECT * FROM TEMP_TABLE;

-- ADD A NEW COLUMN
ALTER TABLE STAGING_DATA
ADD COLUMN DUPLICATES INT;

UPDATE STAGING_DATA
SET DUPLICATES =

SELECT * FROM STAGING_DATA;

-- WINDOW FUNCTION
SELECT * FROM STAGING_DATA;

-- SELECT *, COUNT(*) OVER()
SELECT GENDER, SUM(SALARY)
FROM STAGING_DATA
GROUP BY GENDER;

SELECT `NAME`, GENDER, SUM(SALARY) OVER(PARTITION BY `NAME`, GENDER)
FROM STAGING_DATA;

SELECT * , ROW_NUMBER()
OVER(PARTITION BY  `NAME`, GENDER, DEPARTMENT, SALARY, `START DATE`, FTE, 
`EMPLOYEE TYPE`,`WORK LOCATION`, `CODE`,`ID`) AS DUPLICATES
FROM STAGING_DATA;

SELECT `START DATE`, str_to_date(`Start Date`,'%m/%d/%Y')
FROM STAGING_DATA;

-- 19/02/2019
-- 5-Feb-18
-- May 14, 2019

SELECT `START DATE`, 
case
when`start date` like '%/%/%' then str_to_date(`Start Date`,'%d/%m/%Y')
when`start date` like '%-%-%' then  str_to_date(`Start Date`,'%d-%M-%y')
when`start date` like '% % %' then str_to_date(`Start Date`,'%M %d,%Y')
end as `Date`
from staging_data;
